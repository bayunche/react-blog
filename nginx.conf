user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
        worker_connections 768;
        # multi_accept on;
}

http {
        ##
        # Basic Settings
        ##

        sendfile on;
        tcp_nopush on;
        types_hash_max_size 2048;
        # server_tokens off;

        # server_names_hash_bucket_size 64;
        # server_name_in_redirect off;

        include /etc/nginx/mime.types;
        default_type application/octet-stream;
        ##
        # SSL Settings
        ##

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
        ssl_prefer_server_ciphers on;

        ##
        # Logging Settings
        ##
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log debug;  # 合并为一行，设置为 debug 级别

        ssl_stapling on;
        ssl_stapling_verify on;
        resolver 8.8.8.8 8.8.4.4 valid=300s;
        resolver_timeout 5s;

        include /etc/nginx/conf.d/*.conf;
        include /etc/nginx/sites-enabled/*;

        # 启用 Gzip 压缩
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_min_length 1024;
        gzip_comp_level 6;
        gzip_vary on;

        server {
            listen 80;
            server_name hasunemiku.top www.hasunemiku.top;
            # 强制重定向到 HTTPS
            return 301 https://$host$request_uri;
        }

        server {
            listen 443 ssl;
            server_name hasunemiku.top www.hasunemiku.top;

            ssl_certificate /app/cert/hasunemiku.top.pem;
            ssl_certificate_key /app/cert/hasunemiku.top.key;

            location /blog/api/ {
                proxy_pass http://blog:6060/;
                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection "upgrade";
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Forwarded-Host $host;
                proxy_set_header X-Forwarded-Port $server_port;
            }
            
            location /file_split/ {
                rewrite ^/file_split/(.*)$ /$1 break;
                proxy_pass http://word-split-service:8000/;
                proxy_http_version 1.1;
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
            }
            # # 转发 /Terisa/ 下所有请求至 jsDelivr 上对应资源
            # location /Terisa/ {
            #     proxy_pass https://cdn.jsdelivr.net/gh/bayunche/react-blog@release-v0.0.5/Resources/Terisa/;
            #     proxy_set_header Host cdn.jsdelivr.net;
            # }

            # # 转发 /bilibili-22/ 下所有请求至 jsDelivr 上对应资源
            # location /bilibili-22/ {
            #     proxy_pass https://cdn.jsdelivr.net/gh/bayunche/react-blog@release-v0.0.5/Resources/bilibili-22/;
            #     proxy_set_header Host cdn.jsdelivr.net;
            # }
            # # 转发 /kobayaxi/ 下所有请求至 jsDelivr 上对应资源
            # location /kobayaxi/ {
            #     proxy_pass https://cdn.jsdelivr.net/gh/bayunce/react-blog@release-v0.0.5/Resources/kobayaxi/;
            #     proxy_set_header Host cdn.jsdelivr.net;
            # }

            location / {
                proxy_pass http://blog:4356;
                proxy_intercept_errors on;  # 允许拦截后端错误
                error_page 404 = @fallback;
    
                 # 完整头部信息
                proxy_set_header Host $host;
                proxy_set_header X-Real-IP $remote_addr;
                proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                proxy_set_header X-Forwarded-Proto $scheme;
                proxy_set_header X-Original-URI $request_uri;
                }

                location @fallback {
                    return 200 "Proxy to blog:4356 failed for URI: $request_uri";
                    add_header Content-Type text/plain;
                }
        }
}